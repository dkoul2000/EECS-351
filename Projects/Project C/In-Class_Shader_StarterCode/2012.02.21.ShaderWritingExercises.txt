Feb 21, 2012 EECS 351-1 GLSL Shader-Writing Exercises
======================================================
-Jack Tumblin

1)	Make a program taht uses programmable-shaders to:
 colors EVERYTHING the same color, but make that color keyboard-adjustable;

	'Home' key (GLUT_KEY_HOME in myKeySpecial callback) sets color to mid-gray
	(R=G=B==0.5).
	'r' key / 'R' key increments/decrements red color component
	'g' key / 'G' key increments/decrements green color component
	'b' key / 'B' key increments/decrements blue color component.

2)  Make a program that uses programmable shaders to:
	distort 3D space sinusoidally, 'waving' over time. Every vertex position 	
	will change its z position as a sinusoidal function of x,y and time.
	(HINT: see Thurs lecture notes; 'wave' shaders).

3)   Make a program that uses programmable shaders to:
a) set a random but consistent color for all vertices. (How? seed rand() in myDisplay, e.g. srand(42); use (double)rand()/RAND_MAX to get random value
between 0.0 and 1.0.  Send a new value to your vertex shader for each vertex.
b)  If possible, get openGL to bilinearly intepolate between those randomly-chosen vertex colors on-screen.

4)   Make a program that uses programmable shaders to:
	impose a random but consistent x,y,z displacement to the position of every 
	VERTEX location in the scene.  These should resemble 'roughness' in a wire-
	frame display.

5)   Make a program that uses programmable shaders to:
	impose a random but consistent r,g,b displacement to the color of every 
	FRAGMENT in the scene.  This should make otherwise-uniformly-colored solid 
	shapes appear grainy.

6)   Make a program that uses programmable shaders to:
	modify all vertex colors as a simple function of GLOBAL x,y,z values--when 
	you move the object, each vertex color changes according to its position; 
	the 'world' or 'global' coordinate system x,y,z values modify the color.


7)   Make a program that uses programmable shaders to: modify all vertex colors 
	as a function of local position (the vertex attributes for position, surface 
	normal, etc) in such a way that the color helps reveal the shape of solid 
	objects. For example, you color that's dark on lower parts of a torus and 
	lighter on the upper parts will help reveal its shape.

We will work together in small groups; 
see how many of these goals you can achieve!

